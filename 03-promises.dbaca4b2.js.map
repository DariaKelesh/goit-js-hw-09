{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACHN,EACFI,EAAQ,6CAERC,EAAO,4CAERN,MAIRQ,MAAK,EAACC,SAACA,EAAQC,MAAEA,MACdd,EAAAe,OAAOC,QAAQ,uBAAqBH,QAAiBC,UAExDG,OAAM,EAACJ,SAACA,EAAQC,MAAEA,MACfd,EAAAe,OAAOG,QAAQ,sBAAoBL,QAAeC,UApC1CK,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GAClBA,EAAIC,iBACJ,MAAMT,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,OAEpC,IAAIC,EAAWC,OAAOd,EAAMe,OAC5B,MAAMC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAYH,OAAOH,EAAOI,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACjC9B,EAAc8B,EAAGL,GACjBA,GAAYG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector(\".form\");\n\nformRef.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(evt) {\n    evt.preventDefault();\n    const { delay, step, amount } = evt.target;\n\n    let delayNum = Number(delay.value);\n    const stepNum = Number(step.value);\n    const amountNum = Number(amount.value);\n\n    for (let i = 1; i <= amountNum; i += 1) {\n        createPromise(i, delayNum)\n        delayNum += stepNum;\n    }\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n              resolve(\"Success! Value passed to resolve function\");\n            } else {\n              reject(\"Error! Error passed to reject function\");\n            }\n          }, delay);\n      });\n\n    promise\n    .then(({position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","position","delay","Notify","success","catch","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","target","delayNum","Number","value","stepNum","amountNum","i"],"version":3,"file":"03-promises.dbaca4b2.js.map"}