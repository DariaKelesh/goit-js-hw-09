{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACHN,EACFI,EAAQ,6CAERC,EAAO,4CAERN,MAIRQ,MAAK,SAAAC,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACdf,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAEhEI,OAAM,SAAAN,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACff,EAAAgB,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UApClDM,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GAClBA,EAAIC,iBAOJ,IANA,IAAgCC,EAAAF,EAAIG,OAA5BZ,EAAwBW,EAAxBX,MAAOa,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEjBC,EAAWC,OAAOhB,EAAMiB,OACtBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACjCjC,EAAciC,EAAGL,GACjBA,GAAYG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector(\".form\");\n\nformRef.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(evt) {\n    evt.preventDefault();\n    const { delay, step, amount } = evt.target;\n\n    let delayNum = Number(delay.value);\n    const stepNum = Number(step.value);\n    const amountNum = Number(amount.value);\n\n    for (let i = 1; i <= amountNum; i += 1) {\n        createPromise(i, delayNum)\n        delayNum += stepNum;\n    }\n}\n\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n              resolve(\"Success! Value passed to resolve function\");\n            } else {\n              reject(\"Error! Error passed to reject function\");\n            }\n          }, delay);\n      });\n\n    promise\n    .then(({position, delay}) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","position","delay","Notify","success","concat","catch","failure","document","querySelector","addEventListener","evt","preventDefault","_target","target","step","amount","delayNum","Number","value","stepNum","amountNum","i"],"version":3,"file":"03-promises.f8674049.js.map"}